<html>
  <head>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
    integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
    crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
    integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
    crossorigin=""></script>
    <style>
      body {
        padding: 0;
        margin: 0;
      }
      #map {
        position: absolute;
        width: 100%;
        height: 100%;
      }
    </style>
  </head>
  <body>
    <div id="map"></div>
    <script>
      const mapExtent = ${bounds};
      const mapMinZoom = ${minZoom};
      const mapMaxZoom = ${maxZoom};
      const mapMaxResolution = ${baseResolution};
      const mapMinResolution = Math.pow(2, mapMaxZoom) * mapMaxResolution;
      const crs = L.CRS.Simple;
      crs.transformation = new L.Transformation(1, 0, -1, 0);
      crs.projection.bounds = L.bounds([0, 0], [mapExtent[2], mapExtent[3]])
      crs.scale = function(zoom) {
        return Math.pow(2, zoom) / mapMinResolution;
      };
      crs.zoom = function(scale) {
        return Math.log(scale * mapMinResolution) / Math.LN2;
      };
      crs.infinite = false
      const map = L.map('map', {
        crs: L.CRS.Simple,
        layers: [
          L.tileLayer('{z}/{x}/{y}.png', { tms: true })
        ],
        center: [(mapExtent[1] + mapExtent[3]) / 2, (mapExtent[0] + mapExtent[2]) / 2],
        zoom: Math.round((mapMinZoom + mapMaxZoom) / 2),
        minZoom: 0,
        maxZoom: 5
      })
    </script>
  </body>
</html>